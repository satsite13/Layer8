"use strict";
/*\
|*|
|*|  Base64 / binary data / UTF-8 strings utilities
|*|
|*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding
|*|
\*/
/* Array of bytes to Base64 string decoding */
function b64ToUint6(nChr) {
    return nChr > 64 && nChr < 91 ?
        nChr - 65
        : nChr > 96 && nChr < 123 ?
            nChr - 71
            : nChr > 47 && nChr < 58 ?
                nChr + 4
                : nChr === 43 ?
                    62
                    : nChr === 47 ?
                        63
                        :
                            0;
}
export function b64ToUint8Arr(sBase64, nBlocksSize) {
    var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, ""), nInLen = sB64Enc.length, nOutLen = nBlocksSize ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize : nInLen * 3 + 1 >> 2, taBytes = new Uint8Array(nOutLen);
    for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
        nMod4 = nInIdx & 3;
        nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 6 * (3 - nMod4);
        if (nMod4 === 3 || nInLen - nInIdx === 1) {
            for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
                taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
            }
            nUint24 = 0;
        }
    }
    return taBytes;
}
/* Base64 string to array encoding */
function uint6ToB64(nUint6) {
    return nUint6 < 26 ?
        nUint6 + 65
        : nUint6 < 52 ?
            nUint6 + 71
            : nUint6 < 62 ?
                nUint6 - 4
                : nUint6 === 62 ?
                    43
                    : nUint6 === 63 ?
                        47
                        :
                            65;
}
export function uInt8ArrToB64(aBytes) {
    var nMod3 = 2, sB64Enc = "";
    for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {
        nMod3 = nIdx % 3;
        if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) {
            sB64Enc += "\r\n";
        }
        nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);
        if (nMod3 === 2 || aBytes.length - nIdx === 1) {
            sB64Enc += String.fromCodePoint(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));
            nUint24 = 0;
        }
    }
    return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3) + (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjY0X3V0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYjY0X3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiOzs7Ozs7R0FNRztBQUVILDhDQUE4QztBQUM5QyxTQUFTLFVBQVUsQ0FBRSxJQUFZO0lBQy9CLE9BQU8sSUFBSSxHQUFHLEVBQUUsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDM0IsSUFBSSxHQUFHLEVBQUU7UUFDWCxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDekIsSUFBSSxHQUFHLEVBQUU7WUFDWCxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7Z0JBQ3hCLElBQUksR0FBRyxDQUFDO2dCQUNWLENBQUMsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUM7b0JBQ2IsRUFBRTtvQkFDSixDQUFDLENBQUMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDO3dCQUNiLEVBQUU7d0JBQ0osQ0FBQzs0QkFDQyxDQUFDLENBQUM7QUFDUixDQUFDO0FBQ0QsTUFBTSxVQUFVLGFBQWEsQ0FBRSxPQUFlLEVBQUUsV0FBbUI7SUFDakUsSUFDRSxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUMsRUFDbEQsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQ3ZCLE9BQU8sR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEdBQUcsSUFBSSxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFaEosS0FBSyxJQUFJLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxHQUFHLENBQUMsRUFBRSxPQUFPLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQUUsTUFBTSxHQUFHLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUN0RixLQUFLLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUNuQixPQUFPLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7UUFDckUsSUFBSSxLQUFLLEtBQUssQ0FBQyxJQUFJLE1BQU0sR0FBRyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3hDLEtBQUssS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsQ0FBQyxJQUFJLE9BQU8sR0FBRyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUU7Z0JBQ2xFLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxPQUFPLEtBQUssQ0FBQyxFQUFFLEtBQUssS0FBSyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQzthQUMxRDtZQUNELE9BQU8sR0FBRyxDQUFDLENBQUM7U0FFYjtLQUNGO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQztBQUNELHFDQUFxQztBQUNyQyxTQUFTLFVBQVUsQ0FBRSxNQUFjO0lBQ2pDLE9BQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ2hCLE1BQU0sR0FBRyxFQUFFO1FBQ2IsQ0FBQyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztZQUNiLE1BQU0sR0FBRyxFQUFFO1lBQ2IsQ0FBQyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQztnQkFDYixNQUFNLEdBQUcsQ0FBQztnQkFDWixDQUFDLENBQUMsTUFBTSxLQUFLLEVBQUUsQ0FBQyxDQUFDO29CQUNmLEVBQUU7b0JBQ0osQ0FBQyxDQUFDLE1BQU0sS0FBSyxFQUFFLENBQUMsQ0FBQzt3QkFDZixFQUFFO3dCQUNKLENBQUM7NEJBQ0MsRUFBRSxDQUFDO0FBQ1QsQ0FBQztBQUNELE1BQU0sVUFBVSxhQUFhLENBQUUsTUFBa0I7SUFDL0MsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDNUIsS0FBSyxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLENBQUMsRUFBRSxJQUFJLEdBQUcsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ3pFLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRTtZQUFFLE9BQU8sSUFBSSxNQUFNLENBQUM7U0FBRTtRQUNqRSxPQUFPLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssS0FBSyxDQUFDLElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLEtBQUssQ0FBQyxFQUFFO1lBQzdDLE9BQU8sSUFBSSxNQUFNLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxPQUFPLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxPQUFPLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM1SixPQUFPLEdBQUcsQ0FBQyxDQUFDO1NBQ2I7S0FDRjtJQUNELE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG4vKlxcXHJcbnwqfFxyXG58KnwgIEJhc2U2NCAvIGJpbmFyeSBkYXRhIC8gVVRGLTggc3RyaW5ncyB1dGlsaXRpZXNcclxufCp8XHJcbnwqfCAgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9CYXNlNjRfZW5jb2RpbmdfYW5kX2RlY29kaW5nXHJcbnwqfFxyXG5cXCovXHJcblxyXG4vKiBBcnJheSBvZiBieXRlcyB0byBCYXNlNjQgc3RyaW5nIGRlY29kaW5nICovXHJcbmZ1bmN0aW9uIGI2NFRvVWludDYgKG5DaHI6IG51bWJlcik6IG51bWJlciB7XHJcbiAgcmV0dXJuIG5DaHIgPiA2NCAmJiBuQ2hyIDwgOTEgP1xyXG4gICAgICBuQ2hyIC0gNjVcclxuICAgIDogbkNociA+IDk2ICYmIG5DaHIgPCAxMjMgP1xyXG4gICAgICBuQ2hyIC0gNzFcclxuICAgIDogbkNociA+IDQ3ICYmIG5DaHIgPCA1OCA/XHJcbiAgICAgIG5DaHIgKyA0XHJcbiAgICA6IG5DaHIgPT09IDQzID9cclxuICAgICAgNjJcclxuICAgIDogbkNociA9PT0gNDcgP1xyXG4gICAgICA2M1xyXG4gICAgOlxyXG4gICAgICAwO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBiNjRUb1VpbnQ4QXJyIChzQmFzZTY0OiBzdHJpbmcsIG5CbG9ja3NTaXplOiBudW1iZXIpIHtcclxuICB2YXJcclxuICAgIHNCNjRFbmMgPSBzQmFzZTY0LnJlcGxhY2UoL1teQS1aYS16MC05XFwrXFwvXS9nLCBcIlwiKSxcclxuICAgIG5JbkxlbiA9IHNCNjRFbmMubGVuZ3RoLFxyXG4gICAgbk91dExlbiA9IG5CbG9ja3NTaXplID8gTWF0aC5jZWlsKChuSW5MZW4gKiAzICsgMSA+PiAyKSAvIG5CbG9ja3NTaXplKSAqIG5CbG9ja3NTaXplIDogbkluTGVuICogMyArIDEgPj4gMiwgdGFCeXRlcyA9IG5ldyBVaW50OEFycmF5KG5PdXRMZW4pO1xyXG5cclxuICBmb3IgKHZhciBuTW9kMywgbk1vZDQsIG5VaW50MjQgPSAwLCBuT3V0SWR4ID0gMCwgbkluSWR4ID0gMDsgbkluSWR4IDwgbkluTGVuOyBuSW5JZHgrKykge1xyXG4gICAgbk1vZDQgPSBuSW5JZHggJiAzO1xyXG4gICAgblVpbnQyNCB8PSBiNjRUb1VpbnQ2KHNCNjRFbmMuY2hhckNvZGVBdChuSW5JZHgpKSA8PCA2ICogKDMgLSBuTW9kNCk7XHJcbiAgICBpZiAobk1vZDQgPT09IDMgfHwgbkluTGVuIC0gbkluSWR4ID09PSAxKSB7XHJcbiAgICAgIGZvciAobk1vZDMgPSAwOyBuTW9kMyA8IDMgJiYgbk91dElkeCA8IG5PdXRMZW47IG5Nb2QzKyssIG5PdXRJZHgrKykge1xyXG4gICAgICAgIHRhQnl0ZXNbbk91dElkeF0gPSBuVWludDI0ID4+PiAoMTYgPj4+IG5Nb2QzICYgMjQpICYgMjU1O1xyXG4gICAgICB9XHJcbiAgICAgIG5VaW50MjQgPSAwO1xyXG5cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB0YUJ5dGVzO1xyXG59XHJcbi8qIEJhc2U2NCBzdHJpbmcgdG8gYXJyYXkgZW5jb2RpbmcgKi9cclxuZnVuY3Rpb24gdWludDZUb0I2NCAoblVpbnQ2OiBudW1iZXIpIHtcclxuICByZXR1cm4gblVpbnQ2IDwgMjYgP1xyXG4gICAgICBuVWludDYgKyA2NVxyXG4gICAgOiBuVWludDYgPCA1MiA/XHJcbiAgICAgIG5VaW50NiArIDcxXHJcbiAgICA6IG5VaW50NiA8IDYyID9cclxuICAgICAgblVpbnQ2IC0gNFxyXG4gICAgOiBuVWludDYgPT09IDYyID9cclxuICAgICAgNDNcclxuICAgIDogblVpbnQ2ID09PSA2MyA/XHJcbiAgICAgIDQ3XHJcbiAgICA6XHJcbiAgICAgIDY1O1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiB1SW50OEFyclRvQjY0IChhQnl0ZXM6IFVpbnQ4QXJyYXkpOiBzdHJpbmcge1xyXG4gIHZhciBuTW9kMyA9IDIsIHNCNjRFbmMgPSBcIlwiO1xyXG4gIGZvciAodmFyIG5MZW4gPSBhQnl0ZXMubGVuZ3RoLCBuVWludDI0ID0gMCwgbklkeCA9IDA7IG5JZHggPCBuTGVuOyBuSWR4KyspIHtcclxuICAgIG5Nb2QzID0gbklkeCAlIDM7XHJcbiAgICBpZiAobklkeCA+IDAgJiYgKG5JZHggKiA0IC8gMykgJSA3NiA9PT0gMCkgeyBzQjY0RW5jICs9IFwiXFxyXFxuXCI7IH1cclxuICAgIG5VaW50MjQgfD0gYUJ5dGVzW25JZHhdIDw8ICgxNiA+Pj4gbk1vZDMgJiAyNCk7XHJcbiAgICBpZiAobk1vZDMgPT09IDIgfHwgYUJ5dGVzLmxlbmd0aCAtIG5JZHggPT09IDEpIHtcclxuICAgICAgc0I2NEVuYyArPSBTdHJpbmcuZnJvbUNvZGVQb2ludCh1aW50NlRvQjY0KG5VaW50MjQgPj4+IDE4ICYgNjMpLCB1aW50NlRvQjY0KG5VaW50MjQgPj4+IDEyICYgNjMpLCB1aW50NlRvQjY0KG5VaW50MjQgPj4+IDYgJiA2MyksIHVpbnQ2VG9CNjQoblVpbnQyNCAmIDYzKSk7XHJcbiAgICAgIG5VaW50MjQgPSAwO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gc0I2NEVuYy5zdWJzdHIoMCwgc0I2NEVuYy5sZW5ndGggLSAyICsgbk1vZDMpICsgKG5Nb2QzID09PSAyID8gJycgOiBuTW9kMyA9PT0gMSA/ICc9JyA6ICc9PScpO1xyXG59XHJcblxyXG4vL2V4cG9ydCBkZWZhdWx0IHtiNjRUb1VpbnQ4QXJyLCB1SW50OEFyclRvQjY0fVxyXG5cclxuXHJcblxyXG4iXX0=